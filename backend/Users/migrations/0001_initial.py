# Generated by Django 3.2.9 on 2021-11-21 20:47

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('Categories', '0001_initial'),
        ('Boards', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, db_index=True)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(max_length=30)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('password', models.CharField(max_length=255)),
                ('password_conf', models.CharField(default='', max_length=255)),
                ('email', models.EmailField(max_length=225, unique=True)),
                ('birth_day', models.DateField(null=True)),
                ('gender', models.TextField(choices=[('male', 'Male'), ('female', 'Female')], null=True)),
                ('pronoun', models.TextField(choices=[('he', 'He'), ('she', 'She')], null=True)),
                ('language', models.TextField(choices=[('arabic', 'ar'), ('english', 'en')], null=True)),
                ('address', models.CharField(max_length=225, null=True)),
                ('bio', models.TextField(max_length=3000, null=True)),
                ('profile_image', models.ImageField(null=True, upload_to='User/profile')),
                ('cover_image', models.ImageField(null=True, upload_to='User/cover')),
                ('social_facebook', models.CharField(max_length=100, null=True)),
                ('social_google', models.CharField(max_length=100, null=True)),
                ('social_twitter', models.CharField(max_length=100, null=True)),
                ('history', models.JSONField(default={'recent_categories': []}, null=True)),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('categories', models.ManyToManyField(to='Categories.Category')),
                ('following', models.ManyToManyField(related_name='followers', through='Users.Relationship', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='User_board',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('board_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Boards.board')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='relationship',
            name='followed_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rel_to_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='relationship',
            name='follower_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='rel_from_set', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Invitation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('collaborator', models.CharField(max_length=250, null=True)),
                ('can_edit', models.BooleanField(default=True)),
                ('user_board_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Users.user_board')),
            ],
        ),
    ]
